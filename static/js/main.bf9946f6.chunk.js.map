{"version":3,"sources":["components/TodoList/TodoList.tsx","types/Status.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","_ref","todos","showTodo","selected","setSelectedId","_jsxs","className","children","_jsx","map","todo","id","completed","cn","title","type","onClick","handleButton","Status","TodoFilter","status","setStatus","query","setQuery","setTodos","onChange","e","newStatus","target","value","all","active","placeholder","style","pointerEvents","handleReset","Loader","TodoModal","isLoadingUser","user","close","concat","href","email","name","get","url","fullURL","delay","Promise","resolve","setTimeout","then","fetch","res","json","App","useState","isLoading","setIsLoading","isLoadingModal","setIsLoadingModal","todoModal","setTodoModal","userDetails","setUserDetails","selectedStatus","setSelectedStatus","selectedId","useEffect","finally","loadUserDetails","userId","getUser","_Fragment","todosFiltered","filter","toLowerCase","includes","closeModal","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf9946f6.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  showTodo: (todo: Todo) => void;\n  selected: number;\n  setSelectedId: (id: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  showTodo,\n  selected,\n  setSelectedId,\n}) => {\n  const handleButton = (todo: Todo) => {\n    showTodo(todo);\n    setSelectedId(todo.id);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr key={todo.id} data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed ? (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              ) : null}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleButton(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn('far', {\n                      'fa-eye': todo.id !== selected,\n                      'fa-eye-slash': todo.id === selected,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","export enum Status {\n  all = 'all',\n  completed = 'completed',\n  active = 'active',\n}\n","import { Status } from '../../types/Status';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  status: Status;\n  setStatus: (status: Status) => void;\n  query: string;\n  setQuery: (query: string) => void;\n  todos: Todo[];\n  setTodos: (todo: Todo[]) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  status,\n  setStatus,\n  query,\n  setQuery,\n  todos,\n  setTodos,\n}) => {\n  const handleStatusChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const newStatus = e.target.value;\n\n    setStatus(newStatus as Status);\n  };\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n  };\n\n  const handleReset = () => {\n    setQuery('');\n    setStatus(Status.all);\n    setTodos(todos);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleStatusChange}\n            value={status}\n          >\n            <option value={Status.all}>All</option>\n            <option value={Status.active}>Active</option>\n            <option value={Status.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleReset}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  isLoadingUser: boolean;\n  user: User | null;\n  close: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  isLoadingUser,\n  user,\n  close,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoadingUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={close}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n            {user && (\n              <p className=\"block\" data-cy=\"modal-user\">\n                {/* <strong className=\"has-text-success\">Done</strong> */}\n                <strong className=\"has-text-danger\">\n                  {todo.completed ? 'Done' : 'Planned'}\n                </strong>\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>{user.name}</a>\n              </p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { Status } from './types/Status';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadingModal, setIsLoadingModal] = useState(false);\n  const [todoModal, setTodoModal] = useState<Todo | null>(null);\n  const [userDetails, setUserDetails] = useState<User | null>(null);\n  const [selectedStatus, setSelectedStatus] = useState<Status>(Status.all);\n  const [query, setQuery] = useState('');\n  const [selectedId, setSelectedId] = useState(-1);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then((todo) => {\n        setTodos(todo);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const loadUserDetails = (userId: number) => {\n    setIsLoadingModal(true);\n    getUser(userId)\n      .then((user) => {\n        setUserDetails(user);\n      })\n      .finally(() => setIsLoadingModal(false));\n  };\n\n  const handleShowTodo = (todo: Todo) => {\n    setTodoModal(todo);\n    loadUserDetails(todo.userId);\n  };\n\n  const closeModal = () => {\n    setTodoModal(null);\n    setSelectedId(-1);\n  };\n\n  const todosFiltered = () => {\n    switch (selectedStatus) {\n      case Status.completed: {\n        const filtered = todos.filter((todo) => todo.completed);\n\n        return filtered.filter((todo) => todo.title.toLowerCase().includes(query.toLowerCase()));\n      }\n\n      case Status.active: {\n        const filtered = todos.filter((todo) => !todo.completed);\n\n        return filtered.filter((todo) => todo.title.toLowerCase().includes(query.toLowerCase()));\n      }\n\n      default:\n        return todos.filter((todo) => todo.title.toLowerCase().includes(query.toLowerCase()));\n    }\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setStatus={setSelectedStatus}\n                status={selectedStatus}\n                query={query}\n                setQuery={setQuery}\n                todos={todos}\n                setTodos={setTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList\n                todos={todosFiltered()}\n                showTodo={handleShowTodo}\n                selected={selectedId}\n                setSelectedId={setSelectedId}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {todoModal && !isLoading && (\n        <TodoModal\n          todo={todoModal}\n          isLoadingUser={isLoadingModal}\n          user={userDetails}\n          close={closeModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}